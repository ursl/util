#!/usr/bin/perl

# ----------------------------------------------------------------------
# Usage: ../util/perl/runAll -o results [-s {LQ|sgsingle|bg|...}] [-x extra args] [-d]
# ----------------------------------------------------------------------

use lib "../util/perl"; # this is not nice ...
use Tie::IxHash;

use Getopt::Std;
getopts('cdlo:s:x:');

my $dir        = "results";
if ($opt_o) {
    $dir = $opt_o;
}

# ----------------------------------------------------------------------
# -- read in (and eval) configuration: 
#      $runCommand
#      $dfile
#      %jobs
open(IN, "$dir/jobs") || die "Cannot read $dir/jobs";
while (<IN>) {
    $gProgram .= "  ".$_; 
}
eval $gProgram;

# -- clear old log file
#if (-e "$dir/runAll.log") {
#    unlink("$dir/runAll.log"); 
#}

# ----------------------------------------------------------------------
# -- submit the jobs
foreach $j (keys %jobs) {
    if ($opt_s && !($j =~ /$opt_s/)) {next;}
    if ($opt_c) {
	$jobs{$j} =~/-o (.*)\s-/; $rootfile = $1;  
	if (-e $rootfile) {
	    $size = -s $rootfile;
	    print "$rootfile with size $size exists already, do not resubmit \n";
	    if ($size > 1000) {
		next;
	    }
	} else {
	    # do nothing and proceed with submission
	}
    }
    if ($opt_l) {
	$jobs{$j} =~ s/\|\& tee/>/g;
	$command = "nice $runCommand $jobs{$j} $opt_x >>$dir/runAll.log";
	$command = "nice $runCommand $jobs{$j} $opt_x";
	print "$command\n";
	if (!$opt_d) {
	    system($command);
	}
    } else {
	&createCondorScript($j); 
	$command = "export JOB='$runCommand $jobs{$j} $opt_x'; export LOG=$j; condor_submit condor-$j.txt";
	print "$command\n";
	if (!$opt_d) {
	    system($command);
	    unlink("condor-$j.txt");
	}
    }
}

# ----------------------------------------------------------------------
sub createCondorScript {
    ($log) = @_;
    open(OUT, ">condor-$j.txt")  || die "Cannot open condor-$j.txt\n";
    print OUT <<"EOF";
executable  =  condorRunLq
universe    =  vanilla
log         =  /STORE/LQ/ursl/$j.condor
output      =  /STORE/LQ/ursl/$j.log
initialdir  =  /users/ursl/lq/lq0
getenv      =  True
queue
EOF
close OUT;
}
